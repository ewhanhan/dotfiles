alias zshconfig="code ~/.zshrc"
alias l="eza -lah --icons"
alias zshconfig="code ~/.zshrc"
alias brewup="brew update; brew upgrade; brew autoremove; brew cleanup --prune=all; brew doctor;"
alias ccc="rm -rf ~/Library/Caches/*;"
alias c="clear"
alias s="exec zsh"
alias npmG="npm list -g --depth=0"
alias npmU="ncu -g | grep -oE 'npm -g.*' | xargs -I {} sh -c "{}""
alias python="python3"
alias updateOS="softwareupdate -i -a --no-scan --agree-to-license"

alias d=docker
alias dc=docker-compose

alias ll='ls -alF'
alias ls="eza --icons -F -H --group-directories-first --git -1"
alias lsa="ls -alF"

alias cat='bat --color=always'
alias grep='grep --color=auto'

############################ Alias for Python #############################
alias py="python3"

alias pyi="pip install -U"
alias pyun="pip uninstall"
alias pyls="pip list"
alias pygr="pip freeze | grep"
alias pyir="pip install -r requirements.txt"
alias pyun-all="pip freeze | xargs pip uninstall -y -q"

function pycls() {
  find . -type d -name ".ipynb_checkpoints" -exec rm -rf {} \; 2>/dev/null
  find . -type d -name "__pycache__" -exec rm -rf {} \; 2>/dev/null
  find . -type f -name "*.pyc" -exec rm -f {} \; 2>/dev/null
  find . -name '.DS_Store' -type f -delete
  find . -type d -name ".ruff_cache" -exec rm -rf {} \; 2>/dev/null
}

# --- --- --- --- --- --- --- --- --- --- --- --- --- --- #
# Virtualenv utils
# --- --- --- --- --- --- --- --- --- --- --- --- --- --- #

# Activate a the python virtual environment specified.
# If none specified, use '.venv'.
function vrun() {
  local name="${1:-".venv"}"
  local venvpath="${name:P}"

  if [[ ! -d "$venvpath" ]]; then
    echo >&2 "Error: no such venv in current directory: $name"
    return 1
  fi

  if [[ ! -f "${venvpath}/bin/activate" ]]; then
    echo >&2 "Error: '${name}' is not a proper virtual environment"
    return 1
  fi

  . "${venvpath}/bin/activate" || return $?
  echo "Activated virtual environment ${name}"
}

# Create a new virtual environment, with default name '.venv'.
function py-venv() {
  local name="${1:-".venv"}"
  local venvpath="${name:P}"

  # python3 -m venv "${name}" || return
  virtualenv "${name}"
  echo >&2 "Created venv in '${venvpath}'"
  vrun "${name}"
}
